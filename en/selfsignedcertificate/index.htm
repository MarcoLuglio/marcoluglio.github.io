<!DOCTYPE html>
<html
	xmlns='http://www.w3.org/1999/xhtml'
	lang='en-US'
	xml:lang='en-us'
	>
<head>
	<title>Self-signed certificates for https development</title>
	<meta charset='utf-8' />
	<link rel='stylesheet' href='../../compartilhado/css/main.css' />
</head>
<body>



	<h1>Self-signed certificates <span>for https development</span></h1>

	<section>

	<h2>√çndice</h2>
	<nav id='indice'>
	</nav>

	</section>



	<section>

		<h2 id='chromeflag'>Google Chrome flag</h2>

		<p>
			You might not need a self-signed SSL certificate for https.
			Also, if you are in a hurry, you might try this.
			Paste the following text in the Chrome address bar.
		</p>

		<div class='codeblock'>
			<p>Chrome address bar</p>
			<code class='generic'
				>chrome://flags/#allow-insecure-localhost</code
			>
		</div>

		<p>And enable this flag, then <strong>restart all of Chrome, not just the browser windows.</strong></p>

	</section>



	<section>

		<h2 id='iis'><abbr title='internet infonmation services'>IIS</abbr></h2>

		<p>
			<abbr title='internet infonmation services'>IIS</abbr> requires a certificate with the extension .pfx (PKCS#12).
			Powershell is able to generate such a self-signed certificate for you.
			The official documentation can be found in: <a rel='external nofollow' href='https://docs.microsoft.com/en-us/powershell/module/pkiclient/new-selfsignedcertificate?view=win10-ps'>https://docs.microsoft.com/en-us/powershell/module/pkiclient/new-selfsignedcertificate?view=win10-ps</a>.
		</p>

		<p>
			But basicallly, run Powershell as administrator and type the command:
		</p>

		<div class='codeblock'>
			<p>Powershell as administrator - simple certificate</p>
			<code class='generic'
				>New-SelfSignedCertificate -CertStore "cert:\LocalMachine\My" -DnsName "yoursitedomain.com"</code
			>
		</div>

		<p>
			A more detailed certificate can be generated by using extra parameters below.
			<strong>Google Chrome is becoming more picky about certificate requirements, so you might need the more complete version.</strong>
		</p>

		<div class='codeblock'>
			<p>Powershell as administrator - certificate additional info</p>
			<code class='generic'
				>New-SelfSignedCertificate -Subject "C=your country code,ST=your state,L=your city name,O=your organization,OU=your organization unit" -CertStore "cert:\LocalMachine\My" -DnsName "yoursitedomain.com"</code
			>
		</div>

		<p>
			Export it from the <strong>computer</strong> personal <strong>certificate store</strong>
			(<strong>not to be confused</strong> with the <strong>user</strong> personal <strong>certificate store</strong>,
			which looks the same, but won't have the certificate you just created).
		</p>

		<p><img src='' alt='exporting the certificate from personal certificate store' /></p>

		<p>
			Then install it <strong>under the <q>Trusted Root Certification Authorities</q>.</strong>
		</p>

		<p><img src='' alt='installing the certificate' /></p>

		<p>
			Now on <abbr title='internet infonmation services'>IIS</abbr> Manager, under your site bindings, select the new certificate.
		</p>

		<p><img src='' alt='configuring the certificate on IIS' /></p>

		<p>
			Because you installed the certificate to the Trusted Root Certification Authorities,
			when clicking the view certificate, you should get a dialog telling it is trusted.
		</p>

		<p><img src='' alt='checking if the certificate is trusted' /></p>

	</section>



	<section>

		<h2 id='java'>Java</h2>

		<p>
			Java requires a certificate with the extension .p7b (PKCS#7)?
			Can it use PEM (ASCII) certificates too?
		</p>

		openssl crl2pkcs7 -nocrl -certfile domain.crt -certfile ca-chain.crt -out domain.p7b

	</section>



	<section>

		<h2 id='nodeangular'>Node.js + React or Angular</h2>

		<p>
			Node requires a certificate with the extension .crl (PKCS#10).<br />
			OpenSSL is able to generate such self-signed certificate for you.<br />
			On Windows, <strong>Git bash comer with built in OpenSSL.</strong>
			On Mac and Linux this comes <strong>out of the box.</strong>.<br />
			The official documentation can be found in: <a href='https://www.openssl.org/docs/manmaster/man1/openssl.html'>https://www.openssl.org/docs/manmaster/man1/openssl.html</a>
			and <a href='https://www.openssl.org/docs/manmaster/man1/openssl-req.html'>https://www.openssl.org/docs/manmaster/man1/openssl-req.html</a>
			or <a href='https://www.openssl.org/docs/manmaster/man1.1.1/openssl-req.html'>https://www.openssl.org/docs/manmaster/man1.1.1/openssl-req.html</a>.
		</p>

		<p>Run this command on Git bash or another terminal with OpenSSL:</p>

		<div class='codeblock'>
			<p>zsh or bash + openssl</p>
			<code class='generic'
				>openssl req -x509 -sha256 -nodes -newkey rsa:2048 -subj "/C=your country code/ST=your state/L=your city name/O=your organization/OU=your organization unit/CN=yoursitedomain.com" -days 3650 -keyout privateKey.key -out certificate.crt</code
			>
		</div>

		<div class='codeblock'>
			<p>zsh or bash + openssl</p>
			<code class='generic'
				>openssl req -x509 -sha256 -nodes -newkey rsa:2048 -config certificate.conf -days 3650 -keyout privateKey.key -out certificate.crt</code
			>
		</div>

		<div class='codeblock'>
			<p>certificate.conf</p>
			<code class='generic'
>[req]
default_bits = 2048
prompt = no
default_md = sha256
x509_extensions = v3_req
distinguished_name = dn

[dn]
C = your country code
ST = your state
L = your city
O = your organization
OU = your organization unit
emailAddress = your@email.com
CN = yoursitedomain.com

[v3_req]
subjectAltName = @alt_names

[alt_names]
DNS.1 = *.%HOSTNAME%.%DOT%
DNS.2 = %HOSTNAME%.%DOT%</code
			>
		</div>

		<p>Then install it <strong>under the <q>Trusted Root Certification Authorities</q>.</strong></p>

		<p>
			A more detailed certificate can be generated by using a configuration file like the one below.
			I named it <code>certificate.cnf</code>.
			<strong>Google Chrome is becoming more picky about certificate requirements, so you might need the more complete version.</strong>
		</p>

		<div class='codeblock'>
			<p>certificate.cnf</p>
			<code class='generic'
				>TODO</code
			>
		</div>

	</section>



	<div class='codeblock'>
		<p>terminal (sh like)</p>
		<code class='shell'
			><span class='keyword'>ng</span> <span class='keyword'>serve</span> <span class='parameter'>--ssl</span> true <span class='parameter'>--ssl-key</span> {KEY-PATH} <span class='parameter'>--ssl-cert</span> {CERT-PATH}</code
		>
	</div>

	<div class='codeblock'>
		<p>terminal (sh like)</p>
		<code class='shell'
			>set HTTPS=true&amp;&amp;set SSL_CRT_FILE={CERT-PATH}&amp;&amp;set SSL_KEY_FILE={KEY-PATH}&amp;&amp;react-scripts start</code
		>
	</div>

	<div class='codeblock'>
		<p>terminal (sh like)</p>
		<code class='shell'
			>HTTPS=true SSL_CRT_FILE={CERT-PATH} SSL_KEY_FILE={KEY-PATH} react-scripts start</code
		>
	</div>

	</section>



	<script type='module' src='../../compartilhado/js/utils.js'></script>
	<script type='module' src='../../compartilhado/js/index.js'></script>
	<script type='module' src='../../compartilhado/js/highlighter.js'></script>
	<script type='module' src='../../compartilhado/js/highlightEnhancer.js'></script>



</body>
</html>